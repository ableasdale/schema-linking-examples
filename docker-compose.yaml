version: "3.8"
services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:${CP_TAG}
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker1:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker1
    container_name: broker1
    restart: always
    ports:
      - "8090:8090"
      - "9091:9091"
      - "29091:29091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: BROKER://:9091,PLAINTEXT_HOST://:29091
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker1:9091,PLAINTEXT_HOST://localhost:29091
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:9091
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      KAFKA_REST_ADVERTISED_LISTENERS: http://localhost:8090
      #       CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: "kafka-control-center:9094"
      # CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: "kafka-control-center:9094"
  broker2:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker2
    container_name: broker2
    restart: always
    ports:
      - "8091:8091"
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: BROKER://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker2:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      KAFKA_REST_ADVERTISED_LISTENERS: http://localhost:8091
  broker3:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker3
    container_name: broker3
    restart: always
    ports:
      - "8092:8092"
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: BROKER://:9093,PLAINTEXT_HOST://:29093
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker3:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker3:9093
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      KAFKA_REST_ADVERTISED_LISTENERS: http://localhost:8092
  #control-center:
  #  image: confluentinc/cp-enterprise-control-center:${CP_TAG}
  #  hostname: control-center
  #  container_name: control-center
  #  depends_on:
  #    - zookeeper
  #    - broker1
  #    - broker2
  #    - broker3
  #  ports:
  #    - "9021:9021"
  #  environment:
  #    CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:9091,broker2:9092,broker3:9093'
# ,broker4:9094,broker5:9095,broker6:9096'q
  #    CONTROL_CENTER_REPLICATION_FACTOR: 3
      #CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: "5"
  #    CONTROL_CENTER_STREAMS_CPREST_URL: "http://broker1:8090,http://broker2:8091,http://broker3:8092"

 schema-registry1:
    image: confluentinc/cp-schema-registry:${CP_TAG}
    hostname: schema-registry1
    container_name: schema-registry1
    restart: always
    ports:
      - '8081:8081'
    depends_on:
      - zookeeper
      - broker
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:9091
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://schema-registry:8081"
      #SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_LOG4J_LOGLEVEL: ERROR


  rest-proxy1:
    image: confluentinc/cp-kafka-rest:${CP_TAG}
    hostname: rest-proxy1
    container_name: rest-proxy1
    restart: always
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_REST_LOG4J_LOGLEVEL: ERROR
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: broker:9091
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: "http://rest-proxy:8082"
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"

## Second Cluster below

  zookeeper2:
    image: confluentinc/cp-zookeeper:${CP_TAG}
    hostname: zookeeper2
    container_name: zookeeper2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
  broker4:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker4
    container_name: broker4
    restart: always
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper2:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: BROKER://:9094,PLAINTEXT_HOST://:29094
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker4:9094,PLAINTEXT_HOST://localhost:29094
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker4:9094
      #CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      #CONFLUENT_METRICS_ENABLE: 'true'
      #CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      #CONFLUENT_CONTROLCENTER_KAFKA_TWO_BOOTSTRAP_SERVERS: broker4:9094
      #onfluent.controlcenter.kafka.<name>.bootstrap.servers
  broker5:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker5
    container_name: broker5
    restart: always
    ports:
      - "9095:9095"
      - "29095:29095"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper2:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: BROKER://:9095,PLAINTEXT_HOST://:29095
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker5:9095,PLAINTEXT_HOST://localhost:29095
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker5:9095
      #CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      #CONFLUENT_METRICS_ENABLE: 'true'
      #CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      #CONFLUENT_CONTROLCENTER_KAFKA_TWO_BOOTSTRAP_SERVERS: broker5:9095
  broker6:
    image: confluentinc/cp-server:${CP_TAG}
    hostname: broker6
    container_name: broker6
    restart: always
    ports:
      - "9096:9096"
      - "29096:29096"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper2:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: BROKER://:9096,PLAINTEXT_HOST://:29096
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker6:9096,PLAINTEXT_HOST://localhost:29096
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker6:9096
      #CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      #CONFLUENT_METRICS_ENABLE: 'true'
      #CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      #CONFLUENT_CONTROLCENTER_KAFKA_TWO_BOOTSTRAP_SERVERS: broker6:9096

  schema-registry2:
    image: confluentinc/cp-schema-registry:${CP_TAG}
    hostname: schema-registry2
    container_name: schema-registry2
    restart: always
    ports:
      - '8081:8081'
    depends_on:
      - zookeeper
      - broker
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:9091
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://schema-registry:8081"
      #SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_LOG4J_LOGLEVEL: ERROR


  rest-proxy2:
    image: confluentinc/cp-kafka-rest:${CP_TAG}
    hostname: rest-proxy2
    container_name: rest-proxy2
    restart: always
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_REST_LOG4J_LOGLEVEL: ERROR
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: broker:9091
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: "http://rest-proxy:8082"
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"